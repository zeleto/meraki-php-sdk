<?php
/**
 * GetOrganizationBrandingPolicies200ResponseInnerHelpSettings
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Meraki\Model;

use \ArrayAccess;
use \Meraki\ObjectSerializer;

/**
 * GetOrganizationBrandingPolicies200ResponseInnerHelpSettings Class Doc Comment
 *
 * @category Class
 * @description Settings for describing the modifications to various Help page features. Each property in this object accepts one of       &#39;default or inherit&#39; (do not modify functionality), &#39;hide&#39; (remove the section from Dashboard), or &#39;show&#39; (always show       the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on       Dashboard; see the documentation for each property to see the allowed values.
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class GetOrganizationBrandingPolicies200ResponseInnerHelpSettings implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'getOrganizationBrandingPolicies_200_response_inner_helpSettings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'help_tab' => 'string',
        'get_help_subtab' => 'string',
        'community_subtab' => 'string',
        'cases_subtab' => 'string',
        'data_protection_requests_subtab' => 'string',
        'get_help_subtab_knowledge_base_search' => 'string',
        'universal_search_knowledge_base_search' => 'string',
        'cisco_meraki_product_documentation' => 'string',
        'support_contact_info' => 'string',
        'new_features_subtab' => 'string',
        'firewall_info_subtab' => 'string',
        'api_docs_subtab' => 'string',
        'hardware_replacements_subtab' => 'string',
        'sm_forums' => 'string',
        'help_widget' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'help_tab' => null,
        'get_help_subtab' => null,
        'community_subtab' => null,
        'cases_subtab' => null,
        'data_protection_requests_subtab' => null,
        'get_help_subtab_knowledge_base_search' => null,
        'universal_search_knowledge_base_search' => null,
        'cisco_meraki_product_documentation' => null,
        'support_contact_info' => null,
        'new_features_subtab' => null,
        'firewall_info_subtab' => null,
        'api_docs_subtab' => null,
        'hardware_replacements_subtab' => null,
        'sm_forums' => null,
        'help_widget' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'help_tab' => false,
        'get_help_subtab' => false,
        'community_subtab' => false,
        'cases_subtab' => false,
        'data_protection_requests_subtab' => false,
        'get_help_subtab_knowledge_base_search' => false,
        'universal_search_knowledge_base_search' => false,
        'cisco_meraki_product_documentation' => false,
        'support_contact_info' => false,
        'new_features_subtab' => false,
        'firewall_info_subtab' => false,
        'api_docs_subtab' => false,
        'hardware_replacements_subtab' => false,
        'sm_forums' => false,
        'help_widget' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'help_tab' => 'helpTab',
        'get_help_subtab' => 'getHelpSubtab',
        'community_subtab' => 'communitySubtab',
        'cases_subtab' => 'casesSubtab',
        'data_protection_requests_subtab' => 'dataProtectionRequestsSubtab',
        'get_help_subtab_knowledge_base_search' => 'getHelpSubtabKnowledgeBaseSearch',
        'universal_search_knowledge_base_search' => 'universalSearchKnowledgeBaseSearch',
        'cisco_meraki_product_documentation' => 'ciscoMerakiProductDocumentation',
        'support_contact_info' => 'supportContactInfo',
        'new_features_subtab' => 'newFeaturesSubtab',
        'firewall_info_subtab' => 'firewallInfoSubtab',
        'api_docs_subtab' => 'apiDocsSubtab',
        'hardware_replacements_subtab' => 'hardwareReplacementsSubtab',
        'sm_forums' => 'smForums',
        'help_widget' => 'helpWidget'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'help_tab' => 'setHelpTab',
        'get_help_subtab' => 'setGetHelpSubtab',
        'community_subtab' => 'setCommunitySubtab',
        'cases_subtab' => 'setCasesSubtab',
        'data_protection_requests_subtab' => 'setDataProtectionRequestsSubtab',
        'get_help_subtab_knowledge_base_search' => 'setGetHelpSubtabKnowledgeBaseSearch',
        'universal_search_knowledge_base_search' => 'setUniversalSearchKnowledgeBaseSearch',
        'cisco_meraki_product_documentation' => 'setCiscoMerakiProductDocumentation',
        'support_contact_info' => 'setSupportContactInfo',
        'new_features_subtab' => 'setNewFeaturesSubtab',
        'firewall_info_subtab' => 'setFirewallInfoSubtab',
        'api_docs_subtab' => 'setApiDocsSubtab',
        'hardware_replacements_subtab' => 'setHardwareReplacementsSubtab',
        'sm_forums' => 'setSmForums',
        'help_widget' => 'setHelpWidget'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'help_tab' => 'getHelpTab',
        'get_help_subtab' => 'getGetHelpSubtab',
        'community_subtab' => 'getCommunitySubtab',
        'cases_subtab' => 'getCasesSubtab',
        'data_protection_requests_subtab' => 'getDataProtectionRequestsSubtab',
        'get_help_subtab_knowledge_base_search' => 'getGetHelpSubtabKnowledgeBaseSearch',
        'universal_search_knowledge_base_search' => 'getUniversalSearchKnowledgeBaseSearch',
        'cisco_meraki_product_documentation' => 'getCiscoMerakiProductDocumentation',
        'support_contact_info' => 'getSupportContactInfo',
        'new_features_subtab' => 'getNewFeaturesSubtab',
        'firewall_info_subtab' => 'getFirewallInfoSubtab',
        'api_docs_subtab' => 'getApiDocsSubtab',
        'hardware_replacements_subtab' => 'getHardwareReplacementsSubtab',
        'sm_forums' => 'getSmForums',
        'help_widget' => 'getHelpWidget'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    public const HELP_TAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const HELP_TAB_HIDE = 'hide';
    public const HELP_TAB_SHOW = 'show';
    public const GET_HELP_SUBTAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const GET_HELP_SUBTAB_HIDE = 'hide';
    public const GET_HELP_SUBTAB_SHOW = 'show';
    public const COMMUNITY_SUBTAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const COMMUNITY_SUBTAB_HIDE = 'hide';
    public const COMMUNITY_SUBTAB_SHOW = 'show';
    public const CASES_SUBTAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const CASES_SUBTAB_HIDE = 'hide';
    public const CASES_SUBTAB_SHOW = 'show';
    public const DATA_PROTECTION_REQUESTS_SUBTAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const DATA_PROTECTION_REQUESTS_SUBTAB_HIDE = 'hide';
    public const DATA_PROTECTION_REQUESTS_SUBTAB_SHOW = 'show';
    public const UNIVERSAL_SEARCH_KNOWLEDGE_BASE_SEARCH_DEFAULT_OR_INHERIT = 'default or inherit';
    public const UNIVERSAL_SEARCH_KNOWLEDGE_BASE_SEARCH_HIDE = 'hide';
    public const UNIVERSAL_SEARCH_KNOWLEDGE_BASE_SEARCH_SHOW = 'show';
    public const NEW_FEATURES_SUBTAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const NEW_FEATURES_SUBTAB_HIDE = 'hide';
    public const NEW_FEATURES_SUBTAB_SHOW = 'show';
    public const FIREWALL_INFO_SUBTAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const FIREWALL_INFO_SUBTAB_HIDE = 'hide';
    public const FIREWALL_INFO_SUBTAB_SHOW = 'show';
    public const API_DOCS_SUBTAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const API_DOCS_SUBTAB_HIDE = 'hide';
    public const API_DOCS_SUBTAB_SHOW = 'show';
    public const HARDWARE_REPLACEMENTS_SUBTAB_DEFAULT_OR_INHERIT = 'default or inherit';
    public const HARDWARE_REPLACEMENTS_SUBTAB_HIDE = 'hide';
    public const HARDWARE_REPLACEMENTS_SUBTAB_SHOW = 'show';
    public const SM_FORUMS_DEFAULT_OR_INHERIT = 'default or inherit';
    public const SM_FORUMS_HIDE = 'hide';
    public const SM_FORUMS_SHOW = 'show';
    public const HELP_WIDGET_DEFAULT_OR_INHERIT = 'default or inherit';
    public const HELP_WIDGET_HIDE = 'hide';
    public const HELP_WIDGET_SHOW = 'show';

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getHelpTabAllowableValues()
    {
        return [
            self::HELP_TAB_DEFAULT_OR_INHERIT,
            self::HELP_TAB_HIDE,
            self::HELP_TAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getGetHelpSubtabAllowableValues()
    {
        return [
            self::GET_HELP_SUBTAB_DEFAULT_OR_INHERIT,
            self::GET_HELP_SUBTAB_HIDE,
            self::GET_HELP_SUBTAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCommunitySubtabAllowableValues()
    {
        return [
            self::COMMUNITY_SUBTAB_DEFAULT_OR_INHERIT,
            self::COMMUNITY_SUBTAB_HIDE,
            self::COMMUNITY_SUBTAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCasesSubtabAllowableValues()
    {
        return [
            self::CASES_SUBTAB_DEFAULT_OR_INHERIT,
            self::CASES_SUBTAB_HIDE,
            self::CASES_SUBTAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getDataProtectionRequestsSubtabAllowableValues()
    {
        return [
            self::DATA_PROTECTION_REQUESTS_SUBTAB_DEFAULT_OR_INHERIT,
            self::DATA_PROTECTION_REQUESTS_SUBTAB_HIDE,
            self::DATA_PROTECTION_REQUESTS_SUBTAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getUniversalSearchKnowledgeBaseSearchAllowableValues()
    {
        return [
            self::UNIVERSAL_SEARCH_KNOWLEDGE_BASE_SEARCH_DEFAULT_OR_INHERIT,
            self::UNIVERSAL_SEARCH_KNOWLEDGE_BASE_SEARCH_HIDE,
            self::UNIVERSAL_SEARCH_KNOWLEDGE_BASE_SEARCH_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getNewFeaturesSubtabAllowableValues()
    {
        return [
            self::NEW_FEATURES_SUBTAB_DEFAULT_OR_INHERIT,
            self::NEW_FEATURES_SUBTAB_HIDE,
            self::NEW_FEATURES_SUBTAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getFirewallInfoSubtabAllowableValues()
    {
        return [
            self::FIREWALL_INFO_SUBTAB_DEFAULT_OR_INHERIT,
            self::FIREWALL_INFO_SUBTAB_HIDE,
            self::FIREWALL_INFO_SUBTAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getApiDocsSubtabAllowableValues()
    {
        return [
            self::API_DOCS_SUBTAB_DEFAULT_OR_INHERIT,
            self::API_DOCS_SUBTAB_HIDE,
            self::API_DOCS_SUBTAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getHardwareReplacementsSubtabAllowableValues()
    {
        return [
            self::HARDWARE_REPLACEMENTS_SUBTAB_DEFAULT_OR_INHERIT,
            self::HARDWARE_REPLACEMENTS_SUBTAB_HIDE,
            self::HARDWARE_REPLACEMENTS_SUBTAB_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getSmForumsAllowableValues()
    {
        return [
            self::SM_FORUMS_DEFAULT_OR_INHERIT,
            self::SM_FORUMS_HIDE,
            self::SM_FORUMS_SHOW,
        ];
    }

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getHelpWidgetAllowableValues()
    {
        return [
            self::HELP_WIDGET_DEFAULT_OR_INHERIT,
            self::HELP_WIDGET_HIDE,
            self::HELP_WIDGET_SHOW,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('help_tab', $data ?? [], null);
        $this->setIfExists('get_help_subtab', $data ?? [], null);
        $this->setIfExists('community_subtab', $data ?? [], null);
        $this->setIfExists('cases_subtab', $data ?? [], null);
        $this->setIfExists('data_protection_requests_subtab', $data ?? [], null);
        $this->setIfExists('get_help_subtab_knowledge_base_search', $data ?? [], null);
        $this->setIfExists('universal_search_knowledge_base_search', $data ?? [], null);
        $this->setIfExists('cisco_meraki_product_documentation', $data ?? [], null);
        $this->setIfExists('support_contact_info', $data ?? [], null);
        $this->setIfExists('new_features_subtab', $data ?? [], null);
        $this->setIfExists('firewall_info_subtab', $data ?? [], null);
        $this->setIfExists('api_docs_subtab', $data ?? [], null);
        $this->setIfExists('hardware_replacements_subtab', $data ?? [], null);
        $this->setIfExists('sm_forums', $data ?? [], null);
        $this->setIfExists('help_widget', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getHelpTabAllowableValues();
        if (!is_null($this->container['help_tab']) && !in_array($this->container['help_tab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'help_tab', must be one of '%s'",
                $this->container['help_tab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getGetHelpSubtabAllowableValues();
        if (!is_null($this->container['get_help_subtab']) && !in_array($this->container['get_help_subtab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'get_help_subtab', must be one of '%s'",
                $this->container['get_help_subtab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCommunitySubtabAllowableValues();
        if (!is_null($this->container['community_subtab']) && !in_array($this->container['community_subtab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'community_subtab', must be one of '%s'",
                $this->container['community_subtab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getCasesSubtabAllowableValues();
        if (!is_null($this->container['cases_subtab']) && !in_array($this->container['cases_subtab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'cases_subtab', must be one of '%s'",
                $this->container['cases_subtab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getDataProtectionRequestsSubtabAllowableValues();
        if (!is_null($this->container['data_protection_requests_subtab']) && !in_array($this->container['data_protection_requests_subtab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'data_protection_requests_subtab', must be one of '%s'",
                $this->container['data_protection_requests_subtab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getUniversalSearchKnowledgeBaseSearchAllowableValues();
        if (!is_null($this->container['universal_search_knowledge_base_search']) && !in_array($this->container['universal_search_knowledge_base_search'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'universal_search_knowledge_base_search', must be one of '%s'",
                $this->container['universal_search_knowledge_base_search'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getNewFeaturesSubtabAllowableValues();
        if (!is_null($this->container['new_features_subtab']) && !in_array($this->container['new_features_subtab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'new_features_subtab', must be one of '%s'",
                $this->container['new_features_subtab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getFirewallInfoSubtabAllowableValues();
        if (!is_null($this->container['firewall_info_subtab']) && !in_array($this->container['firewall_info_subtab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'firewall_info_subtab', must be one of '%s'",
                $this->container['firewall_info_subtab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getApiDocsSubtabAllowableValues();
        if (!is_null($this->container['api_docs_subtab']) && !in_array($this->container['api_docs_subtab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'api_docs_subtab', must be one of '%s'",
                $this->container['api_docs_subtab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getHardwareReplacementsSubtabAllowableValues();
        if (!is_null($this->container['hardware_replacements_subtab']) && !in_array($this->container['hardware_replacements_subtab'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'hardware_replacements_subtab', must be one of '%s'",
                $this->container['hardware_replacements_subtab'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getSmForumsAllowableValues();
        if (!is_null($this->container['sm_forums']) && !in_array($this->container['sm_forums'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'sm_forums', must be one of '%s'",
                $this->container['sm_forums'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getHelpWidgetAllowableValues();
        if (!is_null($this->container['help_widget']) && !in_array($this->container['help_widget'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'help_widget', must be one of '%s'",
                $this->container['help_widget'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets help_tab
     *
     * @return string|null
     */
    public function getHelpTab()
    {
        return $this->container['help_tab'];
    }

    /**
     * Sets help_tab
     *
     * @param string|null $help_tab The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding       customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setHelpTab($help_tab)
    {
        if (is_null($help_tab)) {
            throw new \InvalidArgumentException('non-nullable help_tab cannot be null');
        }
        $allowedValues = $this->getHelpTabAllowableValues();
        if (!in_array($help_tab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'help_tab', must be one of '%s'",
                    $help_tab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['help_tab'] = $help_tab;

        return $this;
    }

    /**
     * Gets get_help_subtab
     *
     * @return string|null
     */
    public function getGetHelpSubtab()
    {
        return $this->container['get_help_subtab'];
    }

    /**
     * Sets get_help_subtab
     *
     * @param string|null $get_help_subtab The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note       that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,       and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setGetHelpSubtab($get_help_subtab)
    {
        if (is_null($get_help_subtab)) {
            throw new \InvalidArgumentException('non-nullable get_help_subtab cannot be null');
        }
        $allowedValues = $this->getGetHelpSubtabAllowableValues();
        if (!in_array($get_help_subtab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'get_help_subtab', must be one of '%s'",
                    $get_help_subtab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['get_help_subtab'] = $get_help_subtab;

        return $this;
    }

    /**
     * Gets community_subtab
     *
     * @return string|null
     */
    public function getCommunitySubtab()
    {
        return $this->container['community_subtab'];
    }

    /**
     * Sets community_subtab
     *
     * @param string|null $community_subtab The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setCommunitySubtab($community_subtab)
    {
        if (is_null($community_subtab)) {
            throw new \InvalidArgumentException('non-nullable community_subtab cannot be null');
        }
        $allowedValues = $this->getCommunitySubtabAllowableValues();
        if (!in_array($community_subtab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'community_subtab', must be one of '%s'",
                    $community_subtab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['community_subtab'] = $community_subtab;

        return $this;
    }

    /**
     * Gets cases_subtab
     *
     * @return string|null
     */
    public function getCasesSubtab()
    {
        return $this->container['cases_subtab'];
    }

    /**
     * Sets cases_subtab
     *
     * @param string|null $cases_subtab The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one       of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setCasesSubtab($cases_subtab)
    {
        if (is_null($cases_subtab)) {
            throw new \InvalidArgumentException('non-nullable cases_subtab cannot be null');
        }
        $allowedValues = $this->getCasesSubtabAllowableValues();
        if (!in_array($cases_subtab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'cases_subtab', must be one of '%s'",
                    $cases_subtab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['cases_subtab'] = $cases_subtab;

        return $this;
    }

    /**
     * Gets data_protection_requests_subtab
     *
     * @return string|null
     */
    public function getDataProtectionRequestsSubtab()
    {
        return $this->container['data_protection_requests_subtab'];
    }

    /**
     * Sets data_protection_requests_subtab
     *
     * @param string|null $data_protection_requests_subtab The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can       be audited. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setDataProtectionRequestsSubtab($data_protection_requests_subtab)
    {
        if (is_null($data_protection_requests_subtab)) {
            throw new \InvalidArgumentException('non-nullable data_protection_requests_subtab cannot be null');
        }
        $allowedValues = $this->getDataProtectionRequestsSubtabAllowableValues();
        if (!in_array($data_protection_requests_subtab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'data_protection_requests_subtab', must be one of '%s'",
                    $data_protection_requests_subtab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['data_protection_requests_subtab'] = $data_protection_requests_subtab;

        return $this;
    }

    /**
     * Gets get_help_subtab_knowledge_base_search
     *
     * @return string|null
     */
    public function getGetHelpSubtabKnowledgeBaseSearch()
    {
        return $this->container['get_help_subtab_knowledge_base_search'];
    }

    /**
     * Sets get_help_subtab_knowledge_base_search
     *
     * @param string|null $get_help_subtab_knowledge_base_search The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
     *
     * @return self
     */
    public function setGetHelpSubtabKnowledgeBaseSearch($get_help_subtab_knowledge_base_search)
    {
        if (is_null($get_help_subtab_knowledge_base_search)) {
            throw new \InvalidArgumentException('non-nullable get_help_subtab_knowledge_base_search cannot be null');
        }
        $this->container['get_help_subtab_knowledge_base_search'] = $get_help_subtab_knowledge_base_search;

        return $this;
    }

    /**
     * Gets universal_search_knowledge_base_search
     *
     * @return string|null
     */
    public function getUniversalSearchKnowledgeBaseSearch()
    {
        return $this->container['universal_search_knowledge_base_search'];
    }

    /**
     * Sets universal_search_knowledge_base_search
     *
     * @param string|null $universal_search_knowledge_base_search The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures       whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setUniversalSearchKnowledgeBaseSearch($universal_search_knowledge_base_search)
    {
        if (is_null($universal_search_knowledge_base_search)) {
            throw new \InvalidArgumentException('non-nullable universal_search_knowledge_base_search cannot be null');
        }
        $allowedValues = $this->getUniversalSearchKnowledgeBaseSearchAllowableValues();
        if (!in_array($universal_search_knowledge_base_search, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'universal_search_knowledge_base_search', must be one of '%s'",
                    $universal_search_knowledge_base_search,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['universal_search_knowledge_base_search'] = $universal_search_knowledge_base_search;

        return $this;
    }

    /**
     * Gets cisco_meraki_product_documentation
     *
     * @return string|null
     */
    public function getCiscoMerakiProductDocumentation()
    {
        return $this->container['cisco_meraki_product_documentation'];
    }

    /**
     * Sets cisco_meraki_product_documentation
     *
     * @param string|null $cisco_meraki_product_documentation The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
     *
     * @return self
     */
    public function setCiscoMerakiProductDocumentation($cisco_meraki_product_documentation)
    {
        if (is_null($cisco_meraki_product_documentation)) {
            throw new \InvalidArgumentException('non-nullable cisco_meraki_product_documentation cannot be null');
        }
        $this->container['cisco_meraki_product_documentation'] = $cisco_meraki_product_documentation;

        return $this;
    }

    /**
     * Gets support_contact_info
     *
     * @return string|null
     */
    public function getSupportContactInfo()
    {
        return $this->container['support_contact_info'];
    }

    /**
     * Sets support_contact_info
     *
     * @param string|null $support_contact_info The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.
     *
     * @return self
     */
    public function setSupportContactInfo($support_contact_info)
    {
        if (is_null($support_contact_info)) {
            throw new \InvalidArgumentException('non-nullable support_contact_info cannot be null');
        }
        $this->container['support_contact_info'] = $support_contact_info;

        return $this;
    }

    /**
     * Gets new_features_subtab
     *
     * @return string|null
     */
    public function getNewFeaturesSubtab()
    {
        return $this->container['new_features_subtab'];
    }

    /**
     * Sets new_features_subtab
     *
     * @param string|null $new_features_subtab The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setNewFeaturesSubtab($new_features_subtab)
    {
        if (is_null($new_features_subtab)) {
            throw new \InvalidArgumentException('non-nullable new_features_subtab cannot be null');
        }
        $allowedValues = $this->getNewFeaturesSubtabAllowableValues();
        if (!in_array($new_features_subtab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'new_features_subtab', must be one of '%s'",
                    $new_features_subtab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['new_features_subtab'] = $new_features_subtab;

        return $this;
    }

    /**
     * Gets firewall_info_subtab
     *
     * @return string|null
     */
    public function getFirewallInfoSubtab()
    {
        return $this->container['firewall_info_subtab'];
    }

    /**
     * Sets firewall_info_subtab
     *
     * @param string|null $firewall_info_subtab The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are       listed. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setFirewallInfoSubtab($firewall_info_subtab)
    {
        if (is_null($firewall_info_subtab)) {
            throw new \InvalidArgumentException('non-nullable firewall_info_subtab cannot be null');
        }
        $allowedValues = $this->getFirewallInfoSubtabAllowableValues();
        if (!in_array($firewall_info_subtab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'firewall_info_subtab', must be one of '%s'",
                    $firewall_info_subtab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['firewall_info_subtab'] = $firewall_info_subtab;

        return $this;
    }

    /**
     * Gets api_docs_subtab
     *
     * @return string|null
     */
    public function getApiDocsSubtab()
    {
        return $this->container['api_docs_subtab'];
    }

    /**
     * Sets api_docs_subtab
     *
     * @param string|null $api_docs_subtab The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of       'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setApiDocsSubtab($api_docs_subtab)
    {
        if (is_null($api_docs_subtab)) {
            throw new \InvalidArgumentException('non-nullable api_docs_subtab cannot be null');
        }
        $allowedValues = $this->getApiDocsSubtabAllowableValues();
        if (!in_array($api_docs_subtab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'api_docs_subtab', must be one of '%s'",
                    $api_docs_subtab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['api_docs_subtab'] = $api_docs_subtab;

        return $this;
    }

    /**
     * Gets hardware_replacements_subtab
     *
     * @return string|null
     */
    public function getHardwareReplacementsSubtab()
    {
        return $this->container['hardware_replacements_subtab'];
    }

    /**
     * Sets hardware_replacements_subtab
     *
     * @param string|null $hardware_replacements_subtab The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of       'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setHardwareReplacementsSubtab($hardware_replacements_subtab)
    {
        if (is_null($hardware_replacements_subtab)) {
            throw new \InvalidArgumentException('non-nullable hardware_replacements_subtab cannot be null');
        }
        $allowedValues = $this->getHardwareReplacementsSubtabAllowableValues();
        if (!in_array($hardware_replacements_subtab, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'hardware_replacements_subtab', must be one of '%s'",
                    $hardware_replacements_subtab,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['hardware_replacements_subtab'] = $hardware_replacements_subtab;

        return $this;
    }

    /**
     * Gets sm_forums
     *
     * @return string|null
     */
    public function getSmForums()
    {
        return $this->container['sm_forums'];
    }

    /**
     * Sets sm_forums
     *
     * @param string|null $sm_forums The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for       organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setSmForums($sm_forums)
    {
        if (is_null($sm_forums)) {
            throw new \InvalidArgumentException('non-nullable sm_forums cannot be null');
        }
        $allowedValues = $this->getSmForumsAllowableValues();
        if (!in_array($sm_forums, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'sm_forums', must be one of '%s'",
                    $sm_forums,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['sm_forums'] = $sm_forums;

        return $this;
    }

    /**
     * Gets help_widget
     *
     * @return string|null
     */
    public function getHelpWidget()
    {
        return $this->container['help_widget'];
    }

    /**
     * Sets help_widget
     *
     * @param string|null $help_widget The 'Help Widget' is a support widget which provides access to live chat, documentation links, Sales contact info,       and other contact avenues to reach Meraki Support. Can be one of 'default or inherit', 'hide' or 'show'.
     *
     * @return self
     */
    public function setHelpWidget($help_widget)
    {
        if (is_null($help_widget)) {
            throw new \InvalidArgumentException('non-nullable help_widget cannot be null');
        }
        $allowedValues = $this->getHelpWidgetAllowableValues();
        if (!in_array($help_widget, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'help_widget', must be one of '%s'",
                    $help_widget,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['help_widget'] = $help_widget;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


