<?php
/**
 * SettingsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SettingsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SettingsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getDeviceApplianceRadioSettings
     *
     * Return the radio settings of an appliance.
     *
     */
    public function testGetDeviceApplianceRadioSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceApplianceUplinksSettings
     *
     * Return the uplink settings for an MX appliance.
     *
     */
    public function testGetDeviceApplianceUplinksSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceCameraVideoSettings
     *
     * Returns video settings for the given camera.
     *
     */
    public function testGetDeviceCameraVideoSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceWirelessBluetoothSettings
     *
     * Return the bluetooth settings for a wireless device.
     *
     */
    public function testGetDeviceWirelessBluetoothSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceWirelessRadioSettings
     *
     * Return the manually configured radio settings overrides of a device, which take precedence over RF profiles..
     *
     */
    public function testGetDeviceWirelessRadioSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkAlertsSettings
     *
     * Return the alert configuration for this network.
     *
     */
    public function testGetNetworkAlertsSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkApplianceFirewallSettings
     *
     * Return the firewall settings for this network.
     *
     */
    public function testGetNetworkApplianceFirewallSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkApplianceSettings
     *
     * Return the appliance settings for a network.
     *
     */
    public function testGetNetworkApplianceSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkApplianceVlansSettings
     *
     * Returns the enabled status of VLANs for the network.
     *
     */
    public function testGetNetworkApplianceVlansSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSettings
     *
     * Return the settings for a network.
     *
     */
    public function testGetNetworkSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchSettings
     *
     * Returns the switch network settings.
     *
     */
    public function testGetNetworkSwitchSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessBluetoothSettings
     *
     * Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network..
     *
     */
    public function testGetNetworkWirelessBluetoothSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessSettings
     *
     * Return the wireless settings for a network.
     *
     */
    public function testGetNetworkWirelessSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessSsidSplashSettings
     *
     * Display the splash page settings for the given SSID.
     *
     */
    public function testGetNetworkWirelessSsidSplashSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAdaptivePolicySettings
     *
     * Returns global adaptive policy settings in an organization.
     *
     */
    public function testGetOrganizationAdaptivePolicySettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessAirMarshalSettingsByNetwork
     *
     * Returns the current Air Marshal settings for this network.
     *
     */
    public function testGetOrganizationWirelessAirMarshalSettingsByNetwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceApplianceRadioSettings
     *
     * Update the radio settings of an appliance.
     *
     */
    public function testUpdateDeviceApplianceRadioSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceApplianceUplinksSettings
     *
     * Update the uplink settings for an MX appliance.
     *
     */
    public function testUpdateDeviceApplianceUplinksSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceCameraVideoSettings
     *
     * Update video settings for the given camera.
     *
     */
    public function testUpdateDeviceCameraVideoSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceWirelessBluetoothSettings
     *
     * Update the bluetooth settings for a wireless device.
     *
     */
    public function testUpdateDeviceWirelessBluetoothSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceWirelessRadioSettings
     *
     * Update the radio settings overrides of a device, which take precedence over RF profiles..
     *
     */
    public function testUpdateDeviceWirelessRadioSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkAlertsSettings
     *
     * Update the alert configuration for this network.
     *
     */
    public function testUpdateNetworkAlertsSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkApplianceFirewallSettings
     *
     * Update the firewall settings for this network.
     *
     */
    public function testUpdateNetworkApplianceFirewallSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkApplianceSettings
     *
     * Update the appliance settings for a network.
     *
     */
    public function testUpdateNetworkApplianceSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkApplianceVlansSettings
     *
     * Enable/Disable VLANs for the given network.
     *
     */
    public function testUpdateNetworkApplianceVlansSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSettings
     *
     * Update the settings for a network.
     *
     */
    public function testUpdateNetworkSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSwitchSettings
     *
     * Update switch network settings.
     *
     */
    public function testUpdateNetworkSwitchSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkWirelessAirMarshalSettings
     *
     * Updates Air Marshal settings..
     *
     */
    public function testUpdateNetworkWirelessAirMarshalSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkWirelessBluetoothSettings
     *
     * Update the Bluetooth settings for a network.
     *
     */
    public function testUpdateNetworkWirelessBluetoothSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkWirelessSettings
     *
     * Update the wireless settings for a network.
     *
     */
    public function testUpdateNetworkWirelessSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkWirelessSsidSplashSettings
     *
     * Modify the splash page settings for the given SSID.
     *
     */
    public function testUpdateNetworkWirelessSsidSplashSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrganizationAdaptivePolicySettings
     *
     * Update global adaptive policy settings.
     *
     */
    public function testUpdateOrganizationAdaptivePolicySettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
