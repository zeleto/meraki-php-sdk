<?php
/**
 * InventoryApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * InventoryApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class InventoryApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for claimIntoOrganizationInventory
     *
     * Claim a list of devices, licenses, and/or orders into an organization inventory.
     *
     */
    public function testClaimIntoOrganizationInventory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOrganizationInventoryDevicesSwapsBulk
     *
     * Swap the devices identified by devices.old with a devices.new, then perform the :afterAction on the devices.old..
     *
     */
    public function testCreateOrganizationInventoryDevicesSwapsBulk()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOrganizationInventoryOnboardingCloudMonitoringExportEvent
     *
     * Imports event logs related to the onboarding app into elastisearch.
     *
     */
    public function testCreateOrganizationInventoryOnboardingCloudMonitoringExportEvent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOrganizationInventoryOnboardingCloudMonitoringImport
     *
     * Commits the import operation to complete the onboarding of a device into Dashboard for monitoring..
     *
     */
    public function testCreateOrganizationInventoryOnboardingCloudMonitoringImport()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOrganizationInventoryOnboardingCloudMonitoringPrepare
     *
     * Initiates or updates an import session.
     *
     */
    public function testCreateOrganizationInventoryOnboardingCloudMonitoringPrepare()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationCellularGatewayEsimsInventory
     *
     * The eSIM inventory of a given organization..
     *
     */
    public function testGetOrganizationCellularGatewayEsimsInventory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationInventoryDevice
     *
     * Return a single device from the inventory of an organization.
     *
     */
    public function testGetOrganizationInventoryDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationInventoryDevices
     *
     * Return the device inventory for an organization.
     *
     */
    public function testGetOrganizationInventoryDevices()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationInventoryDevicesSwapsBulk
     *
     * List of device swaps for a given request ID ({id})..
     *
     */
    public function testGetOrganizationInventoryDevicesSwapsBulk()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationInventoryOnboardingCloudMonitoringImports
     *
     * Check the status of a committed Import operation.
     *
     */
    public function testGetOrganizationInventoryOnboardingCloudMonitoringImports()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationInventoryOnboardingCloudMonitoringNetworks
     *
     * Returns list of networks eligible for adding cloud monitored device.
     *
     */
    public function testGetOrganizationInventoryOnboardingCloudMonitoringNetworks()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for releaseFromOrganizationInventory
     *
     * Release a list of claimed devices from an organization..
     *
     */
    public function testReleaseFromOrganizationInventory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrganizationCellularGatewayEsimsInventory
     *
     * Toggle the status of an eSIM.
     *
     */
    public function testUpdateOrganizationCellularGatewayEsimsInventory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
