<?php
/**
 * MonitorApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MonitorApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MonitorApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for dismissOrganizationAssuranceAlerts
     *
     * Dismiss health alerts.
     *
     */
    public function testDismissOrganizationAssuranceAlerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for generateDeviceCameraSnapshot
     *
     * Generate a snapshot of what the camera sees at the specified time and return a link to that image..
     *
     */
    public function testGenerateDeviceCameraSnapshot()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAdministeredIdentitiesMe
     *
     * Returns the identity of the current user..
     *
     */
    public function testGetAdministeredIdentitiesMe()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceApplianceDhcpSubnets
     *
     * Return the DHCP subnet information for an appliance.
     *
     */
    public function testGetDeviceApplianceDhcpSubnets()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceAppliancePerformance
     *
     * Return the performance score for a single MX.
     *
     */
    public function testGetDeviceAppliancePerformance()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceAppliancePrefixesDelegated
     *
     * Return current delegated IPv6 prefixes on an appliance..
     *
     */
    public function testGetDeviceAppliancePrefixesDelegated()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceAppliancePrefixesDelegatedVlanAssignments
     *
     * Return prefixes assigned to all IPv6 enabled VLANs on an appliance..
     *
     */
    public function testGetDeviceAppliancePrefixesDelegatedVlanAssignments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceCameraAnalyticsLive
     *
     * Returns live state from camera analytics zones.
     *
     */
    public function testGetDeviceCameraAnalyticsLive()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceCameraAnalyticsOverview
     *
     * Returns an overview of aggregate analytics data for a timespan.
     *
     */
    public function testGetDeviceCameraAnalyticsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceCameraAnalyticsRecent
     *
     * Returns most recent record for analytics zones.
     *
     */
    public function testGetDeviceCameraAnalyticsRecent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceCameraAnalyticsZoneHistory
     *
     * Return historical records for analytic zones.
     *
     */
    public function testGetDeviceCameraAnalyticsZoneHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceCameraAnalyticsZones
     *
     * Returns all configured analytic zones for this camera.
     *
     */
    public function testGetDeviceCameraAnalyticsZones()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceClients
     *
     * List the clients of a device, up to a maximum of a month ago.
     *
     */
    public function testGetDeviceClients()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceLldpCdp
     *
     * List LLDP and CDP information for a device.
     *
     */
    public function testGetDeviceLldpCdp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceLossAndLatencyHistory
     *
     * Get the uplink loss percentage and latency in milliseconds, and goodput in kilobits per second for MX, MG and Z devices..
     *
     */
    public function testGetDeviceLossAndLatencyHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchPortsStatuses
     *
     * Return the status for all the ports of a switch.
     *
     */
    public function testGetDeviceSwitchPortsStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchPortsStatusesPackets
     *
     * Return the packet counters for all the ports of a switch.
     *
     */
    public function testGetDeviceSwitchPortsStatusesPackets()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceWirelessConnectionStats
     *
     * Aggregated connectivity info for a given AP on this network.
     *
     */
    public function testGetDeviceWirelessConnectionStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceWirelessLatencyStats
     *
     * Aggregated latency info for a given AP on this network.
     *
     */
    public function testGetDeviceWirelessLatencyStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceWirelessStatus
     *
     * Return the SSID statuses of an access point.
     *
     */
    public function testGetDeviceWirelessStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkAlertsHistory
     *
     * Return the alert history for this network.
     *
     */
    public function testGetNetworkAlertsHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkApplianceClientSecurityEvents
     *
     * List the security events for a client.
     *
     */
    public function testGetNetworkApplianceClientSecurityEvents()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkApplianceSecurityEvents
     *
     * List the security events for a network.
     *
     */
    public function testGetNetworkApplianceSecurityEvents()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkApplianceUplinksUsageHistory
     *
     * Get the sent and received bytes for each uplink of a network..
     *
     */
    public function testGetNetworkApplianceUplinksUsageHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkBluetoothClient
     *
     * Return a Bluetooth client.
     *
     */
    public function testGetNetworkBluetoothClient()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkBluetoothClients
     *
     * List the Bluetooth clients seen by APs in this network.
     *
     */
    public function testGetNetworkBluetoothClients()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClient
     *
     * Return the client associated with the given identifier.
     *
     */
    public function testGetNetworkClient()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClientTrafficHistory
     *
     * Return the client's network traffic data over time.
     *
     */
    public function testGetNetworkClientTrafficHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClientUsageHistory
     *
     * Return the client's daily usage history.
     *
     */
    public function testGetNetworkClientUsageHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClients
     *
     * List the clients that have used this network in the timespan.
     *
     */
    public function testGetNetworkClients()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClientsApplicationUsage
     *
     * Return the application usage data for clients.
     *
     */
    public function testGetNetworkClientsApplicationUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClientsBandwidthUsageHistory
     *
     * Returns a timeseries of total traffic consumption rates for all clients on a network within a given timespan, in megabits per second..
     *
     */
    public function testGetNetworkClientsBandwidthUsageHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClientsOverview
     *
     * Return overview statistics for network clients.
     *
     */
    public function testGetNetworkClientsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClientsUsageHistories
     *
     * Return the usage histories for clients.
     *
     */
    public function testGetNetworkClientsUsageHistories()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkEvents
     *
     * List the events for the network.
     *
     */
    public function testGetNetworkEvents()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkEventsEventTypes
     *
     * List the event type to human-readable description.
     *
     */
    public function testGetNetworkEventsEventTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkInsightApplicationHealthByTime
     *
     * Get application health by time.
     *
     */
    public function testGetNetworkInsightApplicationHealthByTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkNetworkHealthChannelUtilization
     *
     * Get the channel utilization over each radio for all APs in a network..
     *
     */
    public function testGetNetworkNetworkHealthChannelUtilization()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsCurrentOverviewByMetric
     *
     * Return an overview of currently alerting sensors by metric.
     *
     */
    public function testGetNetworkSensorAlertsCurrentOverviewByMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsOverviewByMetric
     *
     * Return an overview of alert occurrences over a timespan, by metric.
     *
     */
    public function testGetNetworkSensorAlertsOverviewByMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSmDeviceCellularUsageHistory
     *
     * Return the client's daily cellular data usage history.
     *
     */
    public function testGetNetworkSmDeviceCellularUsageHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSmDeviceConnectivity
     *
     * Returns historical connectivity data (whether a device is regularly checking in to Dashboard)..
     *
     */
    public function testGetNetworkSmDeviceConnectivity()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSmDeviceDesktopLogs
     *
     * Return historical records of various Systems Manager network connection details for desktop devices..
     *
     */
    public function testGetNetworkSmDeviceDesktopLogs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSmDeviceDeviceCommandLogs
     *
     * Return historical records of commands sent to Systems Manager devices.
     *
     */
    public function testGetNetworkSmDeviceDeviceCommandLogs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSmDevicePerformanceHistory
     *
     * Return historical records of various Systems Manager client metrics for desktop devices..
     *
     */
    public function testGetNetworkSmDevicePerformanceHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSplashLoginAttempts
     *
     * List the splash login attempts for a network.
     *
     */
    public function testGetNetworkSplashLoginAttempts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkTopologyLinkLayer
     *
     * List the LLDP and CDP information for all discovered devices and connections in a network.
     *
     */
    public function testGetNetworkTopologyLinkLayer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkTraffic
     *
     * Return the traffic analysis data for this network.
     *
     */
    public function testGetNetworkTraffic()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessAirMarshal
     *
     * List Air Marshal scan results from a network.
     *
     */
    public function testGetNetworkWirelessAirMarshal()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessChannelUtilizationHistory
     *
     * Return AP channel utilization over time for a device or network client.
     *
     */
    public function testGetNetworkWirelessChannelUtilizationHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessClientConnectionStats
     *
     * Aggregated connectivity info for a given client on this network.
     *
     */
    public function testGetNetworkWirelessClientConnectionStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessClientConnectivityEvents
     *
     * List the wireless connectivity events for a client within a network in the timespan..
     *
     */
    public function testGetNetworkWirelessClientConnectivityEvents()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessClientCountHistory
     *
     * Return wireless client counts over time for a network, device, or network client.
     *
     */
    public function testGetNetworkWirelessClientCountHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessClientLatencyHistory
     *
     * Return the latency history for a client.
     *
     */
    public function testGetNetworkWirelessClientLatencyHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessClientLatencyStats
     *
     * Aggregated latency info for a given client on this network.
     *
     */
    public function testGetNetworkWirelessClientLatencyStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessClientsConnectionStats
     *
     * Aggregated connectivity info for this network, grouped by clients.
     *
     */
    public function testGetNetworkWirelessClientsConnectionStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessClientsLatencyStats
     *
     * Aggregated latency info for this network, grouped by clients.
     *
     */
    public function testGetNetworkWirelessClientsLatencyStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessConnectionStats
     *
     * Aggregated connectivity info for this network.
     *
     */
    public function testGetNetworkWirelessConnectionStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessDataRateHistory
     *
     * Return PHY data rates over time for a network, device, or network client.
     *
     */
    public function testGetNetworkWirelessDataRateHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessDevicesConnectionStats
     *
     * Aggregated connectivity info for this network, grouped by node.
     *
     */
    public function testGetNetworkWirelessDevicesConnectionStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessDevicesLatencyStats
     *
     * Aggregated latency info for this network, grouped by node.
     *
     */
    public function testGetNetworkWirelessDevicesLatencyStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessFailedConnections
     *
     * List of all failed client connection events on this network in a given time range.
     *
     */
    public function testGetNetworkWirelessFailedConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessLatencyHistory
     *
     * Return average wireless latency over time for a network, device, or network client.
     *
     */
    public function testGetNetworkWirelessLatencyHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessLatencyStats
     *
     * Aggregated latency info for this network.
     *
     */
    public function testGetNetworkWirelessLatencyStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessMeshStatuses
     *
     * List wireless mesh statuses for repeaters.
     *
     */
    public function testGetNetworkWirelessMeshStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessSignalQualityHistory
     *
     * Return signal quality (SNR/RSSI) over time for a device or network client.
     *
     */
    public function testGetNetworkWirelessSignalQualityHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessUsageHistory
     *
     * Return AP usage over time for a device or network client.
     *
     */
    public function testGetNetworkWirelessUsageHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAdaptivePolicyOverview
     *
     * Returns adaptive policy aggregate statistics for an organization.
     *
     */
    public function testGetOrganizationAdaptivePolicyOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApiRequests
     *
     * List the API requests made by an organization.
     *
     */
    public function testGetOrganizationApiRequests()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApiRequestsOverview
     *
     * Return an aggregated overview of API requests data.
     *
     */
    public function testGetOrganizationApiRequestsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApiRequestsOverviewResponseCodesByInterval
     *
     * Tracks organizations' API requests by response code across a given time period.
     *
     */
    public function testGetOrganizationApiRequestsOverviewResponseCodesByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApplianceSecurityEvents
     *
     * List the security events for an organization.
     *
     */
    public function testGetOrganizationApplianceSecurityEvents()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApplianceUplinkStatuses
     *
     * List the uplink status of every Meraki MX and Z series appliances in the organization.
     *
     */
    public function testGetOrganizationApplianceUplinkStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApplianceUplinksStatusesOverview
     *
     * Returns an overview of uplink statuses.
     *
     */
    public function testGetOrganizationApplianceUplinksStatusesOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApplianceUplinksUsageByNetwork
     *
     * Get the sent and received bytes for each uplink of all MX and Z networks within an organization.
     *
     */
    public function testGetOrganizationApplianceUplinksUsageByNetwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApplianceVpnStats
     *
     * Show VPN history stat for networks in an organization.
     *
     */
    public function testGetOrganizationApplianceVpnStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApplianceVpnStatuses
     *
     * Show VPN status for networks in an organization.
     *
     */
    public function testGetOrganizationApplianceVpnStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlert
     *
     * Return a singular Health Alert by its id.
     *
     */
    public function testGetOrganizationAssuranceAlert()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlerts
     *
     * Return all health alerts for an organization.
     *
     */
    public function testGetOrganizationAssuranceAlerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverview
     *
     * Return overview of active health alerts for an organization.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewByNetwork
     *
     * Return a Summary of Alerts grouped by network and severity.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewByNetwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewByType
     *
     * Return a Summary of Alerts grouped by type and severity.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewByType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewHistorical
     *
     * Returns historical health alert overviews.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewHistorical()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationCellularGatewayUplinkStatuses
     *
     * List the uplink status of every Meraki MG cellular gateway in the organization.
     *
     */
    public function testGetOrganizationCellularGatewayUplinkStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationClientsBandwidthUsageHistory
     *
     * Return data usage (in megabits per second) over time for all clients in the given organization within a given time range..
     *
     */
    public function testGetOrganizationClientsBandwidthUsageHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationClientsOverview
     *
     * Return summary information around client data usage (in kb) across the given organization..
     *
     */
    public function testGetOrganizationClientsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationConfigurationChanges
     *
     * View the Change Log for your organization.
     *
     */
    public function testGetOrganizationConfigurationChanges()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesAvailabilities
     *
     * List the availability information for devices in an organization.
     *
     */
    public function testGetOrganizationDevicesAvailabilities()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesAvailabilitiesChangeHistory
     *
     * List the availability history information for devices in an organization..
     *
     */
    public function testGetOrganizationDevicesAvailabilitiesChangeHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesPowerModulesStatusesByDevice
     *
     * List the most recent status information for power modules in rackmount MX and MS devices that support them.
     *
     */
    public function testGetOrganizationDevicesPowerModulesStatusesByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesProvisioningStatuses
     *
     * List the provisioning statuses information for devices in an organization..
     *
     */
    public function testGetOrganizationDevicesProvisioningStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesStatuses
     *
     * List the status of every Meraki device in the organization.
     *
     */
    public function testGetOrganizationDevicesStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesStatusesOverview
     *
     * Return an overview of current device statuses.
     *
     */
    public function testGetOrganizationDevicesStatusesOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesSystemMemoryUsageHistoryByInterval
     *
     * Return the memory utilization history in kB for devices in the organization..
     *
     */
    public function testGetOrganizationDevicesSystemMemoryUsageHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesUplinksAddressesByDevice
     *
     * List the current uplink addresses for devices in an organization..
     *
     */
    public function testGetOrganizationDevicesUplinksAddressesByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesUplinksLossAndLatency
     *
     * Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago.
     *
     */
    public function testGetOrganizationDevicesUplinksLossAndLatency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationLicensesOverview
     *
     * Return an overview of the license state for an organization.
     *
     */
    public function testGetOrganizationLicensesOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationOpenapiSpec
     *
     * Return the OpenAPI Specification of the organization's API documentation in JSON.
     *
     */
    public function testGetOrganizationOpenapiSpec()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSensorReadingsHistory
     *
     * Return all reported readings from sensors in a given timespan, sorted by timestamp.
     *
     */
    public function testGetOrganizationSensorReadingsHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSensorReadingsLatest
     *
     * Return the latest available reading for each metric from each sensor, sorted by sensor serial.
     *
     */
    public function testGetOrganizationSensorReadingsLatest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummarySwitchPowerHistory
     *
     * Returns the total PoE power draw for all switch ports in the organization over the requested timespan (by default the last 24 hours).
     *
     */
    public function testGetOrganizationSummarySwitchPowerHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopAppliancesByUtilization
     *
     * Return the top 10 appliances sorted by utilization over given time range..
     *
     */
    public function testGetOrganizationSummaryTopAppliancesByUtilization()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopApplicationsByUsage
     *
     * Return the top applications sorted by data usage over given time range.
     *
     */
    public function testGetOrganizationSummaryTopApplicationsByUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopApplicationsCategoriesByUsage
     *
     * Return the top application categories sorted by data usage over given time range.
     *
     */
    public function testGetOrganizationSummaryTopApplicationsCategoriesByUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopClientsByUsage
     *
     * Return metrics for organization's top 10 clients by data usage (in mb) over given time range..
     *
     */
    public function testGetOrganizationSummaryTopClientsByUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopClientsManufacturersByUsage
     *
     * Return metrics for organization's top clients by data usage (in mb) over given time range, grouped by manufacturer..
     *
     */
    public function testGetOrganizationSummaryTopClientsManufacturersByUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopDevicesByUsage
     *
     * Return metrics for organization's top 10 devices sorted by data usage over given time range.
     *
     */
    public function testGetOrganizationSummaryTopDevicesByUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopDevicesModelsByUsage
     *
     * Return metrics for organization's top 10 device models sorted by data usage over given time range.
     *
     */
    public function testGetOrganizationSummaryTopDevicesModelsByUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopNetworksByStatus
     *
     * List the client and status overview information for the networks in an organization.
     *
     */
    public function testGetOrganizationSummaryTopNetworksByStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopSsidsByUsage
     *
     * Return metrics for organization's top 10 ssids by data usage over given time range.
     *
     */
    public function testGetOrganizationSummaryTopSsidsByUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSummaryTopSwitchesByEnergyUsage
     *
     * Return metrics for organization's top 10 switches by energy usage over given time range.
     *
     */
    public function testGetOrganizationSummaryTopSwitchesByEnergyUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsClientsOverviewByDevice
     *
     * List the number of clients for all switchports with at least one online client in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsClientsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsOverview
     *
     * Returns the counts of all active ports for the requested timespan, grouped by speed.
     *
     */
    public function testGetOrganizationSwitchPortsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsStatusesBySwitch
     *
     * List the switchports in an organization.
     *
     */
    public function testGetOrganizationSwitchPortsStatusesBySwitch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsTopologyDiscoveryByDevice
     *
     * List most recently seen LLDP/CDP discovery and topology information per switch port in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsTopologyDiscoveryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsUsageHistoryByDeviceByInterval
     *
     * List the historical usage and traffic data of switchports in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsUsageHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationUplinksStatuses
     *
     * List the uplink status of every Meraki MX, MG and Z series devices in the organization.
     *
     */
    public function testGetOrganizationUplinksStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWebhooksAlertTypes
     *
     * Return a list of alert types to be used with managing webhook alerts.
     *
     */
    public function testGetOrganizationWebhooksAlertTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWebhooksLogs
     *
     * Return the log of webhook POSTs sent.
     *
     */
    public function testGetOrganizationWebhooksLogs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessClientsOverviewByDevice
     *
     * List access point client count at the moment in an organization.
     *
     */
    public function testGetOrganizationWirelessClientsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerAvailabilitiesChangeHistory
     *
     * List connectivity data of wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerAvailabilitiesChangeHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval
     *
     * List wireless client counts of wireless LAN controllers over time in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerConnections
     *
     * List all access points associated with wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL2ByDevice
     *
     * List wireless LAN controller layer 2 interfaces in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL2ByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL2StatusesChangeHistoryByDevice
     *
     * List wireless LAN controller layer 2 interfaces history status in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL2StatusesChangeHistoryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL2UsageHistoryByInterval
     *
     * List wireless LAN controller layer 2 interfaces history usage in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL2UsageHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL3ByDevice
     *
     * List wireless LAN controller layer 3 interfaces in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL3ByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL3StatusesChangeHistoryByDevice
     *
     * List wireless LAN controller layer 3 interfaces history status in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL3StatusesChangeHistoryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL3UsageHistoryByInterval
     *
     * List wireless LAN controller layer 3 interfaces history usage in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL3UsageHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice
     *
     * Retrieve the packet counters for the interfaces of a Wireless LAN controller.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesUsageHistoryByInterval
     *
     * Retrieve the traffic for the interfaces of a Wireless LAN controller.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesUsageHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesRedundancyFailoverHistory
     *
     * List the failover events of wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesRedundancyFailoverHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesRedundancyStatuses
     *
     * List redundancy details of wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesRedundancyStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesSystemUtilizationHistoryByInterval
     *
     * List cpu utilization data of wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesSystemUtilizationHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerOverviewByDevice
     *
     * List the overview information of wireless LAN controllers in an organization and it is updated every minute..
     *
     */
    public function testGetOrganizationWirelessControllerOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesChannelUtilizationByDevice
     *
     * Get average channel utilization for all bands in a network, split by AP.
     *
     */
    public function testGetOrganizationWirelessDevicesChannelUtilizationByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesChannelUtilizationByNetwork
     *
     * Get average channel utilization across all bands for all networks in the organization.
     *
     */
    public function testGetOrganizationWirelessDevicesChannelUtilizationByNetwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval
     *
     * Get a time-series of average channel utilization for all bands, segmented by device..
     *
     */
    public function testGetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByInterval
     *
     * Get a time-series of average channel utilization for all bands.
     *
     */
    public function testGetOrganizationWirelessDevicesChannelUtilizationHistoryByNetworkByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesEthernetStatuses
     *
     * List the most recent Ethernet link speed, duplex, aggregation and power mode and status information for wireless devices..
     *
     */
    public function testGetOrganizationWirelessDevicesEthernetStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesPacketLossByClient
     *
     * Get average packet loss for the given timespan for all clients in the organization..
     *
     */
    public function testGetOrganizationWirelessDevicesPacketLossByClient()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesPacketLossByDevice
     *
     * Get average packet loss for the given timespan for all devices in the organization.
     *
     */
    public function testGetOrganizationWirelessDevicesPacketLossByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesPacketLossByNetwork
     *
     * Get average packet loss for the given timespan for all networks in the organization..
     *
     */
    public function testGetOrganizationWirelessDevicesPacketLossByNetwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesPowerModeHistory
     *
     * Return a record of power mode changes for wireless devices in the organization.
     *
     */
    public function testGetOrganizationWirelessDevicesPowerModeHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesSystemCpuLoadHistory
     *
     * Return the CPU Load history for a list of wireless devices in the organization..
     *
     */
    public function testGetOrganizationWirelessDevicesSystemCpuLoadHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesWirelessControllersByDevice
     *
     * List of Catalyst access points information.
     *
     */
    public function testGetOrganizationWirelessDevicesWirelessControllersByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessSsidsStatusesByDevice
     *
     * List status information of all BSSIDs in your organization.
     *
     */
    public function testGetOrganizationWirelessSsidsStatusesByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restoreOrganizationAssuranceAlerts
     *
     * Restore health alerts from dismissed.
     *
     */
    public function testRestoreOrganizationAssuranceAlerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
