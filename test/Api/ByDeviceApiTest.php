<?php
/**
 * ByDeviceApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ByDeviceApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ByDeviceApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice
     *
     * Return the devices that have a Dynamic ARP Inspection warning and their warnings.
     *
     */
    public function testGetNetworkSwitchDhcpServerPolicyArpInspectionWarningsByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkVlanProfilesAssignmentsByDevice
     *
     * Get the assigned VLAN Profiles for devices in a network.
     *
     */
    public function testGetNetworkVlanProfilesAssignmentsByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationCameraBoundariesAreasByDevice
     *
     * Returns all configured area boundaries of cameras.
     *
     */
    public function testGetOrganizationCameraBoundariesAreasByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationCameraBoundariesLinesByDevice
     *
     * Returns all configured crossingline boundaries of cameras.
     *
     */
    public function testGetOrganizationCameraBoundariesLinesByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesPowerModulesStatusesByDevice
     *
     * List the most recent status information for power modules in rackmount MX and MS devices that support them.
     *
     */
    public function testGetOrganizationDevicesPowerModulesStatusesByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesUplinksAddressesByDevice
     *
     * List the current uplink addresses for devices in an organization..
     *
     */
    public function testGetOrganizationDevicesUplinksAddressesByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationFirmwareUpgradesByDevice
     *
     * Get firmware upgrade status for the filtered devices.
     *
     */
    public function testGetOrganizationFirmwareUpgradesByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsClientsOverviewByDevice
     *
     * List the number of clients for all switchports with at least one online client in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsClientsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsTopologyDiscoveryByDevice
     *
     * List most recently seen LLDP/CDP discovery and topology information per switch port in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsTopologyDiscoveryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsUsageHistoryByDeviceByInterval
     *
     * List the historical usage and traffic data of switchports in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsUsageHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessClientsOverviewByDevice
     *
     * List access point client count at the moment in an organization.
     *
     */
    public function testGetOrganizationWirelessClientsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval
     *
     * List wireless client counts of wireless LAN controllers over time in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL2ByDevice
     *
     * List wireless LAN controller layer 2 interfaces in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL2ByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL2StatusesChangeHistoryByDevice
     *
     * List wireless LAN controller layer 2 interfaces history status in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL2StatusesChangeHistoryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL3ByDevice
     *
     * List wireless LAN controller layer 3 interfaces in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL3ByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL3StatusesChangeHistoryByDevice
     *
     * List wireless LAN controller layer 3 interfaces history status in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL3StatusesChangeHistoryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice
     *
     * Retrieve the packet counters for the interfaces of a Wireless LAN controller.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerOverviewByDevice
     *
     * List the overview information of wireless LAN controllers in an organization and it is updated every minute..
     *
     */
    public function testGetOrganizationWirelessControllerOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesChannelUtilizationByDevice
     *
     * Get average channel utilization for all bands in a network, split by AP.
     *
     */
    public function testGetOrganizationWirelessDevicesChannelUtilizationByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval
     *
     * Get a time-series of average channel utilization for all bands, segmented by device..
     *
     */
    public function testGetOrganizationWirelessDevicesChannelUtilizationHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesPacketLossByDevice
     *
     * Get average packet loss for the given timespan for all devices in the organization.
     *
     */
    public function testGetOrganizationWirelessDevicesPacketLossByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessDevicesWirelessControllersByDevice
     *
     * List of Catalyst access points information.
     *
     */
    public function testGetOrganizationWirelessDevicesWirelessControllersByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessRfProfilesAssignmentsByDevice
     *
     * List the RF profiles of an organization by device.
     *
     */
    public function testGetOrganizationWirelessRfProfilesAssignmentsByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessSsidsStatusesByDevice
     *
     * List status information of all BSSIDs in your organization.
     *
     */
    public function testGetOrganizationWirelessSsidsStatusesByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
