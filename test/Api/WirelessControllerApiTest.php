<?php
/**
 * WirelessControllerApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * WirelessControllerApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class WirelessControllerApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getOrganizationWirelessControllerAvailabilitiesChangeHistory
     *
     * List connectivity data of wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerAvailabilitiesChangeHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval
     *
     * List wireless client counts of wireless LAN controllers over time in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerConnections
     *
     * List all access points associated with wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL2ByDevice
     *
     * List wireless LAN controller layer 2 interfaces in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL2ByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL2StatusesChangeHistoryByDevice
     *
     * List wireless LAN controller layer 2 interfaces history status in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL2StatusesChangeHistoryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL2UsageHistoryByInterval
     *
     * List wireless LAN controller layer 2 interfaces history usage in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL2UsageHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL3ByDevice
     *
     * List wireless LAN controller layer 3 interfaces in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL3ByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL3StatusesChangeHistoryByDevice
     *
     * List wireless LAN controller layer 3 interfaces history status in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL3StatusesChangeHistoryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesL3UsageHistoryByInterval
     *
     * List wireless LAN controller layer 3 interfaces history usage in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesL3UsageHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice
     *
     * Retrieve the packet counters for the interfaces of a Wireless LAN controller.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesUsageHistoryByInterval
     *
     * Retrieve the traffic for the interfaces of a Wireless LAN controller.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesUsageHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesRedundancyFailoverHistory
     *
     * List the failover events of wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesRedundancyFailoverHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesRedundancyStatuses
     *
     * List redundancy details of wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesRedundancyStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesSystemUtilizationHistoryByInterval
     *
     * List cpu utilization data of wireless LAN controllers in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesSystemUtilizationHistoryByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerOverviewByDevice
     *
     * List the overview information of wireless LAN controllers in an organization and it is updated every minute..
     *
     */
    public function testGetOrganizationWirelessControllerOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
