<?php
/**
 * RoutingApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * RoutingApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RoutingApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createDeviceSwitchRoutingInterface
     *
     * Create a layer 3 interface for a switch.
     *
     */
    public function testCreateDeviceSwitchRoutingInterface()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDeviceSwitchRoutingStaticRoute
     *
     * Create a layer 3 static route for a switch.
     *
     */
    public function testCreateDeviceSwitchRoutingStaticRoute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNetworkSwitchRoutingMulticastRendezvousPoint
     *
     * Create a multicast rendezvous point.
     *
     */
    public function testCreateNetworkSwitchRoutingMulticastRendezvousPoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNetworkSwitchStackRoutingInterface
     *
     * Create a layer 3 interface for a switch stack.
     *
     */
    public function testCreateNetworkSwitchStackRoutingInterface()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNetworkSwitchStackRoutingStaticRoute
     *
     * Create a layer 3 static route for a switch stack.
     *
     */
    public function testCreateNetworkSwitchStackRoutingStaticRoute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDeviceSwitchRoutingInterface
     *
     * Delete a layer 3 interface from the switch.
     *
     */
    public function testDeleteDeviceSwitchRoutingInterface()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDeviceSwitchRoutingStaticRoute
     *
     * Delete a layer 3 static route for a switch.
     *
     */
    public function testDeleteDeviceSwitchRoutingStaticRoute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNetworkSwitchRoutingMulticastRendezvousPoint
     *
     * Delete a multicast rendezvous point.
     *
     */
    public function testDeleteNetworkSwitchRoutingMulticastRendezvousPoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNetworkSwitchStackRoutingInterface
     *
     * Delete a layer 3 interface from a switch stack.
     *
     */
    public function testDeleteNetworkSwitchStackRoutingInterface()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNetworkSwitchStackRoutingStaticRoute
     *
     * Delete a layer 3 static route for a switch stack.
     *
     */
    public function testDeleteNetworkSwitchStackRoutingStaticRoute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchRoutingInterface
     *
     * Return a layer 3 interface for a switch.
     *
     */
    public function testGetDeviceSwitchRoutingInterface()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchRoutingInterfaceDhcp
     *
     * Return a layer 3 interface DHCP configuration for a switch.
     *
     */
    public function testGetDeviceSwitchRoutingInterfaceDhcp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchRoutingInterfaces
     *
     * List layer 3 interfaces for a switch.
     *
     */
    public function testGetDeviceSwitchRoutingInterfaces()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchRoutingStaticRoute
     *
     * Return a layer 3 static route for a switch.
     *
     */
    public function testGetDeviceSwitchRoutingStaticRoute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchRoutingStaticRoutes
     *
     * List layer 3 static routes for a switch.
     *
     */
    public function testGetDeviceSwitchRoutingStaticRoutes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchRoutingMulticast
     *
     * Return multicast settings for a network.
     *
     */
    public function testGetNetworkSwitchRoutingMulticast()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchRoutingMulticastRendezvousPoint
     *
     * Return a multicast rendezvous point.
     *
     */
    public function testGetNetworkSwitchRoutingMulticastRendezvousPoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchRoutingMulticastRendezvousPoints
     *
     * List multicast rendezvous points.
     *
     */
    public function testGetNetworkSwitchRoutingMulticastRendezvousPoints()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchRoutingOspf
     *
     * Return layer 3 OSPF routing configuration.
     *
     */
    public function testGetNetworkSwitchRoutingOspf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchStackRoutingInterface
     *
     * Return a layer 3 interface from a switch stack.
     *
     */
    public function testGetNetworkSwitchStackRoutingInterface()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchStackRoutingInterfaceDhcp
     *
     * Return a layer 3 interface DHCP configuration for a switch stack.
     *
     */
    public function testGetNetworkSwitchStackRoutingInterfaceDhcp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchStackRoutingInterfaces
     *
     * List layer 3 interfaces for a switch stack.
     *
     */
    public function testGetNetworkSwitchStackRoutingInterfaces()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchStackRoutingStaticRoute
     *
     * Return a layer 3 static route for a switch stack.
     *
     */
    public function testGetNetworkSwitchStackRoutingStaticRoute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSwitchStackRoutingStaticRoutes
     *
     * List layer 3 static routes for a switch stack.
     *
     */
    public function testGetNetworkSwitchStackRoutingStaticRoutes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceSwitchRoutingInterface
     *
     * Update a layer 3 interface for a switch.
     *
     */
    public function testUpdateDeviceSwitchRoutingInterface()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceSwitchRoutingInterfaceDhcp
     *
     * Update a layer 3 interface DHCP configuration for a switch.
     *
     */
    public function testUpdateDeviceSwitchRoutingInterfaceDhcp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceSwitchRoutingStaticRoute
     *
     * Update a layer 3 static route for a switch.
     *
     */
    public function testUpdateDeviceSwitchRoutingStaticRoute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSwitchRoutingMulticast
     *
     * Update multicast settings for a network.
     *
     */
    public function testUpdateNetworkSwitchRoutingMulticast()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSwitchRoutingMulticastRendezvousPoint
     *
     * Update a multicast rendezvous point.
     *
     */
    public function testUpdateNetworkSwitchRoutingMulticastRendezvousPoint()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSwitchRoutingOspf
     *
     * Update layer 3 OSPF routing configuration.
     *
     */
    public function testUpdateNetworkSwitchRoutingOspf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSwitchStackRoutingInterface
     *
     * Update a layer 3 interface for a switch stack.
     *
     */
    public function testUpdateNetworkSwitchStackRoutingInterface()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSwitchStackRoutingInterfaceDhcp
     *
     * Update a layer 3 interface DHCP configuration for a switch stack.
     *
     */
    public function testUpdateNetworkSwitchStackRoutingInterfaceDhcp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSwitchStackRoutingStaticRoute
     *
     * Update a layer 3 static route for a switch stack.
     *
     */
    public function testUpdateNetworkSwitchStackRoutingStaticRoute()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
