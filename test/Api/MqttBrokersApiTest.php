<?php
/**
 * MqttBrokersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * MqttBrokersApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class MqttBrokersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createNetworkMqttBroker
     *
     * Add an MQTT broker.
     *
     */
    public function testCreateNetworkMqttBroker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNetworkMqttBroker
     *
     * Delete an MQTT broker.
     *
     */
    public function testDeleteNetworkMqttBroker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkMqttBroker
     *
     * Return an MQTT broker.
     *
     */
    public function testGetNetworkMqttBroker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkMqttBrokers
     *
     * List the MQTT brokers for this network.
     *
     */
    public function testGetNetworkMqttBrokers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorMqttBroker
     *
     * Return the sensor settings of an MQTT broker.
     *
     */
    public function testGetNetworkSensorMqttBroker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorMqttBrokers
     *
     * List the sensor settings of all MQTT brokers for this network.
     *
     */
    public function testGetNetworkSensorMqttBrokers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkMqttBroker
     *
     * Update an MQTT broker.
     *
     */
    public function testUpdateNetworkMqttBroker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSensorMqttBroker
     *
     * Update the sensor settings of an MQTT broker.
     *
     */
    public function testUpdateNetworkSensorMqttBroker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
