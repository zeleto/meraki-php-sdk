<?php
/**
 * SensorApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SensorApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SensorApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createDeviceSensorCommand
     *
     * Sends a command to a sensor.
     *
     */
    public function testCreateDeviceSensorCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNetworkSensorAlertsProfile
     *
     * Creates a sensor alert profile for a network..
     *
     */
    public function testCreateNetworkSensorAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNetworkSensorAlertsProfile
     *
     * Deletes a sensor alert profile from a network..
     *
     */
    public function testDeleteNetworkSensorAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSensorCommand
     *
     * Returns information about the command's execution, including the status.
     *
     */
    public function testGetDeviceSensorCommand()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSensorCommands
     *
     * Returns a historical log of all commands.
     *
     */
    public function testGetDeviceSensorCommands()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSensorRelationships
     *
     * List the sensor roles for a given sensor or camera device..
     *
     */
    public function testGetDeviceSensorRelationships()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsCurrentOverviewByMetric
     *
     * Return an overview of currently alerting sensors by metric.
     *
     */
    public function testGetNetworkSensorAlertsCurrentOverviewByMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsOverviewByMetric
     *
     * Return an overview of alert occurrences over a timespan, by metric.
     *
     */
    public function testGetNetworkSensorAlertsOverviewByMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsProfile
     *
     * Show details of a sensor alert profile for a network..
     *
     */
    public function testGetNetworkSensorAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsProfiles
     *
     * Lists all sensor alert profiles for a network..
     *
     */
    public function testGetNetworkSensorAlertsProfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorMqttBroker
     *
     * Return the sensor settings of an MQTT broker.
     *
     */
    public function testGetNetworkSensorMqttBroker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorMqttBrokers
     *
     * List the sensor settings of all MQTT brokers for this network.
     *
     */
    public function testGetNetworkSensorMqttBrokers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorRelationships
     *
     * List the sensor roles for devices in a given network.
     *
     */
    public function testGetNetworkSensorRelationships()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSensorReadingsHistory
     *
     * Return all reported readings from sensors in a given timespan, sorted by timestamp.
     *
     */
    public function testGetOrganizationSensorReadingsHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSensorReadingsLatest
     *
     * Return the latest available reading for each metric from each sensor, sorted by sensor serial.
     *
     */
    public function testGetOrganizationSensorReadingsLatest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceSensorRelationships
     *
     * Assign one or more sensor roles to a given sensor or camera device..
     *
     */
    public function testUpdateDeviceSensorRelationships()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSensorAlertsProfile
     *
     * Updates a sensor alert profile for a network..
     *
     */
    public function testUpdateNetworkSensorAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSensorMqttBroker
     *
     * Update the sensor settings of an MQTT broker.
     *
     */
    public function testUpdateNetworkSensorMqttBroker()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
