<?php
/**
 * OverviewApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OverviewApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OverviewApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getDeviceCameraAnalyticsOverview
     *
     * Returns an overview of aggregate analytics data for a timespan.
     *
     */
    public function testGetDeviceCameraAnalyticsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkClientsOverview
     *
     * Return overview statistics for network clients.
     *
     */
    public function testGetNetworkClientsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsCurrentOverviewByMetric
     *
     * Return an overview of currently alerting sensors by metric.
     *
     */
    public function testGetNetworkSensorAlertsCurrentOverviewByMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsOverviewByMetric
     *
     * Return an overview of alert occurrences over a timespan, by metric.
     *
     */
    public function testGetNetworkSensorAlertsOverviewByMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAdaptivePolicyOverview
     *
     * Returns adaptive policy aggregate statistics for an organization.
     *
     */
    public function testGetOrganizationAdaptivePolicyOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApiRequestsOverview
     *
     * Return an aggregated overview of API requests data.
     *
     */
    public function testGetOrganizationApiRequestsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApiRequestsOverviewResponseCodesByInterval
     *
     * Tracks organizations' API requests by response code across a given time period.
     *
     */
    public function testGetOrganizationApiRequestsOverviewResponseCodesByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationApplianceUplinksStatusesOverview
     *
     * Returns an overview of uplink statuses.
     *
     */
    public function testGetOrganizationApplianceUplinksStatusesOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverview
     *
     * Return overview of active health alerts for an organization.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewByNetwork
     *
     * Return a Summary of Alerts grouped by network and severity.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewByNetwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewByType
     *
     * Return a Summary of Alerts grouped by type and severity.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewByType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewHistorical
     *
     * Returns historical health alert overviews.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewHistorical()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationClientsOverview
     *
     * Return summary information around client data usage (in kb) across the given organization..
     *
     */
    public function testGetOrganizationClientsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesOverviewByModel
     *
     * Lists the count for each device model.
     *
     */
    public function testGetOrganizationDevicesOverviewByModel()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationDevicesStatusesOverview
     *
     * Return an overview of current device statuses.
     *
     */
    public function testGetOrganizationDevicesStatusesOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationLicensesOverview
     *
     * Return an overview of the license state for an organization.
     *
     */
    public function testGetOrganizationLicensesOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsClientsOverviewByDevice
     *
     * List the number of clients for all switchports with at least one online client in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsClientsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsOverview
     *
     * Returns the counts of all active ports for the requested timespan, grouped by speed.
     *
     */
    public function testGetOrganizationSwitchPortsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessClientsOverviewByDevice
     *
     * List access point client count at the moment in an organization.
     *
     */
    public function testGetOrganizationWirelessClientsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval
     *
     * List wireless client counts of wireless LAN controllers over time in an organization.
     *
     */
    public function testGetOrganizationWirelessControllerClientsOverviewHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice
     *
     * Retrieve the packet counters for the interfaces of a Wireless LAN controller.
     *
     */
    public function testGetOrganizationWirelessControllerDevicesInterfacesPacketsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationWirelessControllerOverviewByDevice
     *
     * List the overview information of wireless LAN controllers in an organization and it is updated every minute..
     *
     */
    public function testGetOrganizationWirelessControllerOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
