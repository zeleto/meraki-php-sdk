<?php
/**
 * AlertsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * AlertsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AlertsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createNetworkSensorAlertsProfile
     *
     * Creates a sensor alert profile for a network..
     *
     */
    public function testCreateNetworkSensorAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createOrganizationAlertsProfile
     *
     * Create an organization-wide alert configuration.
     *
     */
    public function testCreateOrganizationAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNetworkSensorAlertsProfile
     *
     * Deletes a sensor alert profile from a network..
     *
     */
    public function testDeleteNetworkSensorAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrganizationAlertsProfile
     *
     * Removes an organization-wide alert config.
     *
     */
    public function testDeleteOrganizationAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for dismissOrganizationAssuranceAlerts
     *
     * Dismiss health alerts.
     *
     */
    public function testDismissOrganizationAssuranceAlerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkAlertsHistory
     *
     * Return the alert history for this network.
     *
     */
    public function testGetNetworkAlertsHistory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkAlertsSettings
     *
     * Return the alert configuration for this network.
     *
     */
    public function testGetNetworkAlertsSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkHealthAlerts
     *
     * Return all global alerts on this network.
     *
     */
    public function testGetNetworkHealthAlerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsCurrentOverviewByMetric
     *
     * Return an overview of currently alerting sensors by metric.
     *
     */
    public function testGetNetworkSensorAlertsCurrentOverviewByMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsOverviewByMetric
     *
     * Return an overview of alert occurrences over a timespan, by metric.
     *
     */
    public function testGetNetworkSensorAlertsOverviewByMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsProfile
     *
     * Show details of a sensor alert profile for a network..
     *
     */
    public function testGetNetworkSensorAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkSensorAlertsProfiles
     *
     * Lists all sensor alert profiles for a network..
     *
     */
    public function testGetNetworkSensorAlertsProfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAlertsProfiles
     *
     * List all organization-wide alert configurations.
     *
     */
    public function testGetOrganizationAlertsProfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlert
     *
     * Return a singular Health Alert by its id.
     *
     */
    public function testGetOrganizationAssuranceAlert()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlerts
     *
     * Return all health alerts for an organization.
     *
     */
    public function testGetOrganizationAssuranceAlerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverview
     *
     * Return overview of active health alerts for an organization.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewByNetwork
     *
     * Return a Summary of Alerts grouped by network and severity.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewByNetwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewByType
     *
     * Return a Summary of Alerts grouped by type and severity.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewByType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationAssuranceAlertsOverviewHistorical
     *
     * Returns historical health alert overviews.
     *
     */
    public function testGetOrganizationAssuranceAlertsOverviewHistorical()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restoreOrganizationAssuranceAlerts
     *
     * Restore health alerts from dismissed.
     *
     */
    public function testRestoreOrganizationAssuranceAlerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkAlertsSettings
     *
     * Update the alert configuration for this network.
     *
     */
    public function testUpdateNetworkAlertsSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkSensorAlertsProfile
     *
     * Updates a sensor alert profile for a network..
     *
     */
    public function testUpdateNetworkSensorAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrganizationAlertsProfile
     *
     * Update an organization-wide alert config.
     *
     */
    public function testUpdateOrganizationAlertsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
