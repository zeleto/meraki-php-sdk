<?php
/**
 * PortsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Meraki\Test\Api;

use \Meraki\Configuration;
use \Meraki\ApiException;
use \Meraki\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PortsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PortsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for assignNetworkWirelessEthernetPortsProfiles
     *
     * Assign AP port profile to list of APs.
     *
     */
    public function testAssignNetworkWirelessEthernetPortsProfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createNetworkWirelessEthernetPortsProfile
     *
     * Create an AP port profile.
     *
     */
    public function testCreateNetworkWirelessEthernetPortsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for cycleDeviceSwitchPorts
     *
     * Cycle a set of switch ports.
     *
     */
    public function testCycleDeviceSwitchPorts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNetworkWirelessEthernetPortsProfile
     *
     * Delete an AP port profile.
     *
     */
    public function testDeleteNetworkWirelessEthernetPortsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchPort
     *
     * Return a switch port.
     *
     */
    public function testGetDeviceSwitchPort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchPorts
     *
     * List the switch ports for a switch.
     *
     */
    public function testGetDeviceSwitchPorts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchPortsStatuses
     *
     * Return the status for all the ports of a switch.
     *
     */
    public function testGetDeviceSwitchPortsStatuses()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceSwitchPortsStatusesPackets
     *
     * Return the packet counters for all the ports of a switch.
     *
     */
    public function testGetDeviceSwitchPortsStatusesPackets()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkAppliancePort
     *
     * Return per-port VLAN settings for a single MX port..
     *
     */
    public function testGetNetworkAppliancePort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkAppliancePorts
     *
     * List per-port VLAN settings for all ports of a MX..
     *
     */
    public function testGetNetworkAppliancePorts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessEthernetPortsProfile
     *
     * Show the AP port profile by ID for this network.
     *
     */
    public function testGetNetworkWirelessEthernetPortsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getNetworkWirelessEthernetPortsProfiles
     *
     * List the AP port profiles for this network.
     *
     */
    public function testGetNetworkWirelessEthernetPortsProfiles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationConfigTemplateSwitchProfilePort
     *
     * Return a switch template port.
     *
     */
    public function testGetOrganizationConfigTemplateSwitchProfilePort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationConfigTemplateSwitchProfilePorts
     *
     * Return all the ports of a switch template.
     *
     */
    public function testGetOrganizationConfigTemplateSwitchProfilePorts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsBySwitch
     *
     * List the switchports in an organization by switch.
     *
     */
    public function testGetOrganizationSwitchPortsBySwitch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsClientsOverviewByDevice
     *
     * List the number of clients for all switchports with at least one online client in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsClientsOverviewByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsOverview
     *
     * Returns the counts of all active ports for the requested timespan, grouped by speed.
     *
     */
    public function testGetOrganizationSwitchPortsOverview()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsStatusesBySwitch
     *
     * List the switchports in an organization.
     *
     */
    public function testGetOrganizationSwitchPortsStatusesBySwitch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsTopologyDiscoveryByDevice
     *
     * List most recently seen LLDP/CDP discovery and topology information per switch port in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsTopologyDiscoveryByDevice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrganizationSwitchPortsUsageHistoryByDeviceByInterval
     *
     * List the historical usage and traffic data of switchports in an organization..
     *
     */
    public function testGetOrganizationSwitchPortsUsageHistoryByDeviceByInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setNetworkWirelessEthernetPortsProfilesDefault
     *
     * Set the AP port profile to be default for this network.
     *
     */
    public function testSetNetworkWirelessEthernetPortsProfilesDefault()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceSwitchPort
     *
     * Update a switch port.
     *
     */
    public function testUpdateDeviceSwitchPort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkAppliancePort
     *
     * Update the per-port VLAN settings for a single MX port..
     *
     */
    public function testUpdateNetworkAppliancePort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNetworkWirelessEthernetPortsProfile
     *
     * Update the AP port profile by ID for this network.
     *
     */
    public function testUpdateNetworkWirelessEthernetPortsProfile()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrganizationConfigTemplateSwitchProfilePort
     *
     * Update a switch template port.
     *
     */
    public function testUpdateOrganizationConfigTemplateSwitchProfilePort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
