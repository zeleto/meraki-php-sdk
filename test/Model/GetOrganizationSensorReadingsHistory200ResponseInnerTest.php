<?php
/**
 * GetOrganizationSensorReadingsHistory200ResponseInnerTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Meraki\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * GetOrganizationSensorReadingsHistory200ResponseInnerTest Class Doc Comment
 *
 * @category    Class
 * @description GetOrganizationSensorReadingsHistory200ResponseInner
 * @package     Meraki
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class GetOrganizationSensorReadingsHistory200ResponseInnerTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GetOrganizationSensorReadingsHistory200ResponseInner"
     */
    public function testGetOrganizationSensorReadingsHistory200ResponseInner()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "serial"
     */
    public function testPropertySerial()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "network"
     */
    public function testPropertyNetwork()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ts"
     */
    public function testPropertyTs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "metric"
     */
    public function testPropertyMetric()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "apparent_power"
     */
    public function testPropertyApparentPower()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "battery"
     */
    public function testPropertyBattery()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "button"
     */
    public function testPropertyButton()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "co2"
     */
    public function testPropertyCo2()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "current"
     */
    public function testPropertyCurrent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "door"
     */
    public function testPropertyDoor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "downstream_power"
     */
    public function testPropertyDownstreamPower()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "frequency"
     */
    public function testPropertyFrequency()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "humidity"
     */
    public function testPropertyHumidity()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "indoor_air_quality"
     */
    public function testPropertyIndoorAirQuality()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "noise"
     */
    public function testPropertyNoise()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pm25"
     */
    public function testPropertyPm25()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "power_factor"
     */
    public function testPropertyPowerFactor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "real_power"
     */
    public function testPropertyRealPower()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "remote_lockout_switch"
     */
    public function testPropertyRemoteLockoutSwitch()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "temperature"
     */
    public function testPropertyTemperature()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tvoc"
     */
    public function testPropertyTvoc()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "voltage"
     */
    public function testPropertyVoltage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "water"
     */
    public function testPropertyWater()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
