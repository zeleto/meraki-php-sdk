<?php
/**
 * GetNetworkSwitchAccessControlLists200ResponseRulesInnerTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Meraki\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * GetNetworkSwitchAccessControlLists200ResponseRulesInnerTest Class Doc Comment
 *
 * @category    Class
 * @description GetNetworkSwitchAccessControlLists200ResponseRulesInner
 * @package     Meraki
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class GetNetworkSwitchAccessControlLists200ResponseRulesInnerTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "GetNetworkSwitchAccessControlLists200ResponseRulesInner"
     */
    public function testGetNetworkSwitchAccessControlLists200ResponseRulesInner()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "comment"
     */
    public function testPropertyComment()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "policy"
     */
    public function testPropertyPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ip_version"
     */
    public function testPropertyIpVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "protocol"
     */
    public function testPropertyProtocol()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "src_cidr"
     */
    public function testPropertySrcCidr()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "src_port"
     */
    public function testPropertySrcPort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dst_cidr"
     */
    public function testPropertyDstCidr()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dst_port"
     */
    public function testPropertyDstPort()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vlan"
     */
    public function testPropertyVlan()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
