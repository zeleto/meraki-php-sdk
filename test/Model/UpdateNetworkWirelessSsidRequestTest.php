<?php
/**
 * UpdateNetworkWirelessSsidRequestTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Meraki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Meraki Dashboard API
 *
 * A RESTful API to programmatically manage and monitor Cisco Meraki networks at scale.  > Date: 02 April, 2025 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)
 *
 * The version of the OpenAPI document: 1.57.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Meraki\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * UpdateNetworkWirelessSsidRequestTest Class Doc Comment
 *
 * @category    Class
 * @description UpdateNetworkWirelessSsidRequest
 * @package     Meraki
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class UpdateNetworkWirelessSsidRequestTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "UpdateNetworkWirelessSsidRequest"
     */
    public function testUpdateNetworkWirelessSsidRequest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enabled"
     */
    public function testPropertyEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "auth_mode"
     */
    public function testPropertyAuthMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "enterprise_admin_access"
     */
    public function testPropertyEnterpriseAdminAccess()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "encryption_mode"
     */
    public function testPropertyEncryptionMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "psk"
     */
    public function testPropertyPsk()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wpa_encryption_mode"
     */
    public function testPropertyWpaEncryptionMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dot11w"
     */
    public function testPropertyDot11w()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dot11r"
     */
    public function testPropertyDot11r()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "splash_page"
     */
    public function testPropertySplashPage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "splash_guest_sponsor_domains"
     */
    public function testPropertySplashGuestSponsorDomains()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "oauth"
     */
    public function testPropertyOauth()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "local_radius"
     */
    public function testPropertyLocalRadius()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ldap"
     */
    public function testPropertyLdap()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "active_directory"
     */
    public function testPropertyActiveDirectory()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_servers"
     */
    public function testPropertyRadiusServers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_proxy_enabled"
     */
    public function testPropertyRadiusProxyEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_testing_enabled"
     */
    public function testPropertyRadiusTestingEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_called_station_id"
     */
    public function testPropertyRadiusCalledStationId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_authentication_nas_id"
     */
    public function testPropertyRadiusAuthenticationNasId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_server_timeout"
     */
    public function testPropertyRadiusServerTimeout()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_server_attempts_limit"
     */
    public function testPropertyRadiusServerAttemptsLimit()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_fallback_enabled"
     */
    public function testPropertyRadiusFallbackEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_radsec"
     */
    public function testPropertyRadiusRadsec()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_coa_enabled"
     */
    public function testPropertyRadiusCoaEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_failover_policy"
     */
    public function testPropertyRadiusFailoverPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_load_balancing_policy"
     */
    public function testPropertyRadiusLoadBalancingPolicy()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_accounting_enabled"
     */
    public function testPropertyRadiusAccountingEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_accounting_servers"
     */
    public function testPropertyRadiusAccountingServers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_accounting_interim_interval"
     */
    public function testPropertyRadiusAccountingInterimInterval()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_attribute_for_group_policies"
     */
    public function testPropertyRadiusAttributeForGroupPolicies()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ip_assignment_mode"
     */
    public function testPropertyIpAssignmentMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "use_vlan_tagging"
     */
    public function testPropertyUseVlanTagging()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "concentrator_network_id"
     */
    public function testPropertyConcentratorNetworkId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "secondary_concentrator_network_id"
     */
    public function testPropertySecondaryConcentratorNetworkId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disassociate_clients_on_vpn_failover"
     */
    public function testPropertyDisassociateClientsOnVpnFailover()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vlan_id"
     */
    public function testPropertyVlanId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "default_vlan_id"
     */
    public function testPropertyDefaultVlanId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ap_tags_and_vlan_ids"
     */
    public function testPropertyApTagsAndVlanIds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "walled_garden_enabled"
     */
    public function testPropertyWalledGardenEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "walled_garden_ranges"
     */
    public function testPropertyWalledGardenRanges()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gre"
     */
    public function testPropertyGre()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_override"
     */
    public function testPropertyRadiusOverride()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_guest_vlan_enabled"
     */
    public function testPropertyRadiusGuestVlanEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "radius_guest_vlan_id"
     */
    public function testPropertyRadiusGuestVlanId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "min_bitrate"
     */
    public function testPropertyMinBitrate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "band_selection"
     */
    public function testPropertyBandSelection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "per_client_bandwidth_limit_up"
     */
    public function testPropertyPerClientBandwidthLimitUp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "per_client_bandwidth_limit_down"
     */
    public function testPropertyPerClientBandwidthLimitDown()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "per_ssid_bandwidth_limit_up"
     */
    public function testPropertyPerSsidBandwidthLimitUp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "per_ssid_bandwidth_limit_down"
     */
    public function testPropertyPerSsidBandwidthLimitDown()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lan_isolation_enabled"
     */
    public function testPropertyLanIsolationEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "visible"
     */
    public function testPropertyVisible()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "available_on_all_aps"
     */
    public function testPropertyAvailableOnAllAps()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "availability_tags"
     */
    public function testPropertyAvailabilityTags()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mandatory_dhcp_enabled"
     */
    public function testPropertyMandatoryDhcpEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adult_content_filtering_enabled"
     */
    public function testPropertyAdultContentFilteringEnabled()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dns_rewrite"
     */
    public function testPropertyDnsRewrite()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "speed_burst"
     */
    public function testPropertySpeedBurst()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "named_vlans"
     */
    public function testPropertyNamedVlans()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
